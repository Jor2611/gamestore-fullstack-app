version: '3.8'

services:
  ingress:
    image: jorakhachatryan/gamestore-ingress:latest
    container_name: ingress
    depends_on:
      - api
      - basement
    ports:
      - "5000:80"
    networks:
      - gamestore_network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=${PG_USERNAME}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    networks:
      - gamestore_network

  api:
    image: jorakhachatryan/gamestore-api:latest
    container_name: api
    restart: always
    depends_on:
      - postgres
    environment:
      - NODE_ENV
      - PORT
      - PG_HOST
      - PG_PORT
      - PG_USERNAME
      - PG_PASSWORD
      - PG_DATABASE
      - JWT_SECRET
      - JWT_EXPIRATION
      - JWT_ADMIN_EXPIRATION
      - JWT_REMEMBER_EXPIRATION
      - ALLOWED_ORIGINS
    networks:
      - gamestore_network
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "postgres"]
    entrypoint: ["/bin/sh", "-c", "npm run typeorm migration:run -- -d ./src/db.dataSource.ts && npm run start"]
    
  basement:
    image: jorakhachatryan/gamestore-basement:latest
    container_name: basement
    depends_on:
      - api
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://api:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - gamestore_network

networks:
  gamestore_network:
    driver: bridge
